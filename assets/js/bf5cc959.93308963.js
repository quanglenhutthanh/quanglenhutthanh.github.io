"use strict";(self.webpackChunksrc=self.webpackChunksrc||[]).push([[4202],{2008:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=t(5893),a=t(1151);const s={sidebar_position:10,sidebar_label:"Azure AI Language Service"},r="Process and translate text with Azure AI Services",o={id:"AI/Natural Language Processing/Azure AI Language service",title:"Process and translate text with Azure AI Services",description:"The Azure AI Language service is designed to help you extract information from text. It provides functionality that you can use for:",source:"@site/docs/AI/Natural Language Processing/Azure AI Language service.md",sourceDirName:"AI/Natural Language Processing",slug:"/AI/Natural Language Processing/Azure AI Language service",permalink:"/AI/Natural Language Processing/Azure AI Language service",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"Azure AI Language Service"},sidebar:"tutorialSidebar",previous:{title:"Natural Language Processing",permalink:"/AI/Natural Language Processing/About"},next:{title:"Azure AI Speech service",permalink:"/AI/Natural Language Processing/Azure AI Speech service"}},c={},l=[{value:"Azure AI Language APIs",id:"azure-ai-language-apis",level:2},{value:"Detect language",id:"detect-language",level:3},{value:"Extract key phrases",id:"extract-key-phrases",level:3},{value:"Analyze sentiment",id:"analyze-sentiment",level:3},{value:"Extract entities",id:"extract-entities",level:3},{value:"Extract linked entities",id:"extract-linked-entities",level:3},{value:"Azure AI Language SDKs",id:"azure-ai-language-sdks",level:2},{value:"C#",id:"c",level:3},{value:"Python",id:"python",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"process-and-translate-text-with-azure-ai-services",children:"Process and translate text with Azure AI Services"}),"\n",(0,i.jsx)(n.p,{children:"The Azure AI Language service is designed to help you extract information from text. It provides functionality that you can use for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Language detection - determining the language in which text is written."}),"\n",(0,i.jsx)(n.li,{children:"Key phrase extraction - identifying important words and phrases in the text that indicate the main points."}),"\n",(0,i.jsx)(n.li,{children:"Sentiment analysis - quantifying how positive or negative the text is."}),"\n",(0,i.jsx)(n.li,{children:"Named entity recognition - detecting references to entities, including people, locations, time periods, organizations, and more."}),"\n",(0,i.jsx)(n.li,{children:"Entity linking - identifying specific entities by providing reference links to Wikipedia articles."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"image1.png",src:t(5428).Z+"",width:"662",height:"588"})}),"\n",(0,i.jsxs)(n.p,{children:["After you have provisioned a suitable resource in your Azure subscription, you can use its ",(0,i.jsx)(n.strong,{children:"endpoint"})," and one of ",(0,i.jsx)(n.strong,{children:"its subscription keys"})," to call the Azure AI Language APIs from your code. You can call the Azure AI Language APIs by submitting requests in JSON format to the REST interface, or by using any of the available programming language-specific SDKs."]}),"\n",(0,i.jsx)(n.h2,{id:"azure-ai-language-apis",children:"Azure AI Language APIs"}),"\n",(0,i.jsx)(n.p,{children:"When using APIs, the JSON requests and responses exchanged with the REST interface."}),"\n",(0,i.jsx)(n.h3,{id:"detect-language",children:"Detect language"}),"\n",(0,i.jsx)(n.p,{children:"Evaluates text input, for each document submitted, return language identifiers with a score indicating the strength of the analysis."}),"\n",(0,i.jsx)(n.p,{children:"The Azure AI Language service recognizes up to 120 languages."}),"\n",(0,i.jsx)(n.p,{children:"A sample of a properly formatted JSON payload that you might submit to the service in the request body is shown here, including a collection of documents, each containing a unique id and the text to be analyzed."}),"\n",(0,i.jsx)(n.p,{children:"The service will return a JSON response that contains a result for each document in the request body, including the predicted language and a value indicating the confidence level of the prediction."}),"\n",(0,i.jsx)(n.h3,{id:"extract-key-phrases",children:"Extract key phrases"}),"\n",(0,i.jsx)(n.p,{children:"Extract key phrases is the process of evaluating the text of a document, or documents, and then identifying the main points around the context of document(s)."}),"\n",(0,i.jsx)(n.p,{children:"The response contains a list of key phrases detected in each document"}),"\n",(0,i.jsx)(n.h3,{id:"analyze-sentiment",children:"Analyze sentiment"}),"\n",(0,i.jsx)(n.p,{children:"Sentiment analysis is used to how positive or negative a text document is."}),"\n",(0,i.jsx)(n.p,{children:"The response of the service might look like this:"}),"\n",(0,i.jsx)(n.h3,{id:"extract-entities",children:"Extract entities"}),"\n",(0,i.jsx)(n.p,{children:"Named Entity Recognition identifies entities that are mentioned in the text."}),"\n",(0,i.jsx)(n.p,{children:"Input for entity recognition is similar to input for other Azure AI Language API functions:"}),"\n",(0,i.jsx)(n.p,{children:"The response includes a list of categorized entities found in each document:"}),"\n",(0,i.jsx)(n.h3,{id:"extract-linked-entities",children:"Extract linked entities"}),"\n",(0,i.jsx)(n.h2,{id:"azure-ai-language-sdks",children:"Azure AI Language SDKs"}),"\n",(0,i.jsx)(n.p,{children:"When using an SDK, the JSON requests are abstracted by appropriate objects and methods that encapsulate the same data values."}),"\n",(0,i.jsx)(n.h3,{id:"c",children:"C#"}),"\n",(0,i.jsx)(n.p,{children:"dotnet add package Azure.AI.TextAnalytics --version 5.3.0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-C#",children:'using System;\nusing System.IO;\nusing System.Text;\nusing Microsoft.Extensions.Configuration;\n// Import namespaces\nusing Azure;\nusing Azure.AI.TextAnalytics;\n\nnamespace text_analysis\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            try\n            {\n                // Get config settings from AppSettings\n                IConfigurationBuilder builder = new ConfigurationBuilder().AddJsonFile("appsettings.json");\n                IConfigurationRoot configuration = builder.Build();\n                string svcEndpoint = configuration["AIServicesEndpoint"];\n                string svcKey = configuration["AIServicesKey"];\n\n                // Create client using endpoint and key\n                AzureKeyCredential credentials = new AzureKeyCredential(svcKey);\n                Uri endpoint = new Uri(svcEndpoint);\n                TextAnalyticsClient textAnalyticsClient = new TextAnalyticsClient(endpoint,credentials);\n\n                // Analyze each text file in the reviews folder\n                var folderPath = Path.GetFullPath("./reviews");\n                DirectoryInfo folder = new DirectoryInfo(folderPath);\n                foreach(var file in folder.GetFiles("*.txt"))\n                {\n                    Console.WriteLine("=================================================");\n                    Console.WriteLine(file.Name);\n                    StreamReader r = file.OpenText();\n                    var text = r.ReadToEnd();\n                    \n                \n                    // Get language\n                    Console.WriteLine("DETECT LANGUAGE");\n                    DetectedLanguage detectedLanguage = textAnalyticsClient.DetectLanguage(text);\n                    Console.WriteLine($"Language: {detectedLanguage.Name}");\n\n                    // Get sentiment\n                    DocumentSentiment documentSentiment = textAnalyticsClient.AnalyzeSentiment(text);\n                    Console.WriteLine($"Sentiments: {documentSentiment.Sentiment}");\n                    \n                    // Get key phrases\n                    KeyPhraseCollection phrases = textAnalyticsClient.ExtractKeyPhrases(text);\n                    foreach(var phrase in phrases)\n                    {\n                        Console.WriteLine($"{phrase}");\n                    }\n\n                    // Get entities\n                    CategorizedEntityCollection entities = textAnalyticsClient.RecognizeEntities(text);\n                    foreach(var entity in entities) \n                    {\n                        Console.WriteLine($"{entity.Text} - {entity.Category} - {entity.ConfidenceScore}");\n                    }\n\n                    // Get linked entities\n                    LinkedEntityCollection linkedEntities = textAnalyticsClient.RecognizeLinkedEntities(text);\n                    if (linkedEntities.Count > 0)\n                    {\n                        Console.WriteLine("\\nLinks:");\n                        foreach (LinkedEntity linkedEntity in linkedEntities)\n                        {\n                            Console.WriteLine($"\\t{linkedEntity.Name} ({linkedEntity.Url})");\n                        }\n                    }\n                }\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(ex.Message);\n            }\n        }\n\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"python",children:"Python"})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},5428:(e,n,t)=>{t.d(n,{Z:()=>i});const i=t.p+"assets/images/language-cd8f6285ff87c93396f464d48bd74252.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>r});var i=t(7294);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);